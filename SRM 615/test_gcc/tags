!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARRSIZE	AlternativePiles.cpp	27;"	d	file:
AlternativePiles	AlternativePiles.cpp	/^class AlternativePiles {$/;"	c	file:
AlternativePiles::C	AlternativePiles.cpp	/^	string C;$/;"	m	class:AlternativePiles	file:	access:private
AlternativePiles::M	AlternativePiles.cpp	/^	int M;$/;"	m	class:AlternativePiles	file:	access:private
AlternativePiles::count	AlternativePiles.cpp	/^    int count(string C, int M) {$/;"	f	class:AlternativePiles	access:public	signature:(string C, int M)
AlternativePiles::rec	AlternativePiles.cpp	/^	long long rec(int cur, int balance, int matches)$/;"	f	class:AlternativePiles	access:public	signature:(int cur, int balance, int matches)
C	AlternativePiles.cpp	/^	string C;$/;"	m	class:AlternativePiles	file:	access:private
CHECKTIME	AlternativePiles.cpp	87;"	d	file:
FOREACH	AlternativePiles.cpp	92;"	d	file:
M	AlternativePiles.cpp	/^	int M;$/;"	m	class:AlternativePiles	file:	access:private
MAX_M	AlternativePiles.cpp	/^const int MAX_M = 51;$/;"	v
MAX_N	AlternativePiles.cpp	/^const int MAX_N = 5001;$/;"	v
MOD	AlternativePiles.cpp	/^const int MOD = 1e9 + 7;$/;"	v
count	AlternativePiles.cpp	/^    int count(string C, int M) {$/;"	f	class:AlternativePiles	access:public	signature:(string C, int M)
dp	AlternativePiles.cpp	/^long long dp[MAX_N][MAX_M];$/;"	v
eq	AlternativePiles.cpp	/^static void eq( int n, string have, string need ) { $/;"	f	file:	signature:( int n, string have, string need )
eq	AlternativePiles.cpp	/^template<typename T> void eq( int n, T have, T need ) {$/;"	f	signature:( int n, T have, T need )
eq	AlternativePiles.cpp	/^template<typename T> void eq( int n, vector<T> have, vector<T> need ) {$/;"	f	signature:( int n, vector<T> have, vector<T> need )
llong	AlternativePiles.cpp	/^typedef long long llong;$/;"	t	file:
main	AlternativePiles.cpp	/^int main( int argc, char* argv[] ) {$/;"	f	signature:( int argc, char* argv[] )
mkp	AlternativePiles.cpp	91;"	d	file:
pii	AlternativePiles.cpp	/^typedef pair<int, int> pii;$/;"	t	file:
pll	AlternativePiles.cpp	/^typedef pair<llong, llong> pll;$/;"	t	file:
print	AlternativePiles.cpp	/^static void print( long long a ) {$/;"	f	file:	signature:( long long a )
print	AlternativePiles.cpp	/^static void print( string a ) {$/;"	f	file:	signature:( string a )
print	AlternativePiles.cpp	/^template<typename T> void print( T a ) {$/;"	f	signature:( T a )
print	AlternativePiles.cpp	/^template<typename T> void print( vector<T> a ) {$/;"	f	signature:( vector<T> a )
rec	AlternativePiles.cpp	/^	long long rec(int cur, int balance, int matches)$/;"	f	class:AlternativePiles	access:public	signature:(int cur, int balance, int matches)
