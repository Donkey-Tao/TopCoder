import math,string,itertools,fractions,heapq,collections,re,array,bisect,random
import sys
sys.setrecursionlimit(10*10*10*10)

class ShadowSculpture:
    def possible(self, XY, YZ, ZX):
        n = len(XY)
        visited = set()

        def exists(i, j, k):
            if (0 <= i < n) and (0 <= j < n) and (0 <= k < n):
                return XY[i][j] == 'Y' and YZ[j][k] == 'Y' and ZX[k][i] == 'Y'
            else:
                return False

        d = ( (1, 0, 0), (0, 1, 0), (0, 0, 1), (-1, 0, 0), (0, -1, 0), (0, 0, -1) )

        def dfs(i, j, k):
            if (i, j, k) not in visited:
                visited.add( (i, j, k) )
                componentContents.add( (i, j, k) )
                for (di, dj, dk) in d:
                    if exists(di + i, dj + j, dk + k):
                        dfs(i + di, j + dj, k + dk)

        def correctComponent(contents):
            for i in xrange(n):
                for j in xrange(n):
                    if any( ((i, j, k) in contents) for k in xrange(n) ) != (XY[i][j] == 'Y'):
                        return False
                    if any( ((k, i, j) in contents) for k in xrange(n) ) != (YZ[i][j] == 'Y'):
                        return False
                    if any( ((j, k, i) in contents) for k in xrange(n) ) != (ZX[i][j] == 'Y'):
                        return False
            return True

        if correctComponent( set() ):
            return "Possible"

        for i in xrange(n):
            for j in xrange(n):
                for k in xrange(n):
                    if exists(i, j, k) and (i, j, k) not in visited:
                        componentContents = set()
                        dfs(i, j, k)
                        if correctComponent( componentContents ):
                            return "Possible"

        return "Impossible"

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, hasAnswer, p3):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str("\"") + str(p0[i]) + str("\""))
	
	sys.stdout.write(str("}") + str(",") + str("{"))
	for i in range(len(p1)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str("\"") + str(p1[i]) + str("\""))
	
	sys.stdout.write(str("}") + str(",") + str("{"))
	for i in range(len(p2)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str("\"") + str(p2[i]) + str("\""))
	
	sys.stdout.write(str("}"))
	print(str("]"))
	obj = ShadowSculpture()
	startTime = time.clock()
	answer = obj.possible(p0, p1, p2)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		print(str("\t") + str("\"") + str(p3) + str("\""))
	
	print(str("Your answer:"))
	print(str("\t") + str("\"") + str(answer) + str("\""))
	if (hasAnswer):
		res = answer == p3
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = ("YN","NN")
p1 = ("YN","NN")
p2 = ("YN","NN")
p3 = "Possible"
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = ("YN","NY")
p1 = ("YN","NY")
p2 = ("YN","NY")
p3 = "Impossible"
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = ("YYY","YNY","YYY")
p1 = ("YYY","YNY","YYY")
p2 = ("YYY","YNY","YYY")
p3 = "Possible"
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = ("YYY","YNY","YYY")
p1 = ("NYY","YNY","YYY")
p2 = ("YYY","YNY","YYN")
p3 = "Impossible"
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = ("N",)
p1 = ("N",)
p2 = ("N",)
p3 = "Possible"
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
