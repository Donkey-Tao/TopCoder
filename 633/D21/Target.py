import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class Target:
    def draw(self, n):
        ans = ()
        for x in range(n):
            line = ""
            for y in range(n):
                if min(x, n - 1 - x, y, n - 1 - y) % 2 == 0:
                    line += '#'
                else:
                    line += ' '
            ans += (line,)
        
        return ans

#BEGIN KAWIGIEDIT TESTING
#Generated by KawigiEdit - pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0))
	print(str("]"))
	obj = Target()
	startTime = time.clock()
	answer = obj.draw(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		sys.stdout.write(str("\t") + str("{"))
		for i in range(len(p1)):
			if (i > 0):
				sys.stdout.write(str(","))
			
			sys.stdout.write(str("\"") + str(p1[i]) + str("\""))
		
		print(str("}"))
	
	print(str("Your answer:"))
	sys.stdout.write(str("\t") + str("{"))
	for i in range(len(answer)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str("\"") + str(answer[i]) + str("\""))
	
	print(str("}"))
	if (hasAnswer):
		if (len(answer) != len(p1)):
			res = False
		else:
			for i in range(len(answer)):
				if (answer[i] != p1[i]):
					res = False
				
			
		
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False

#-- -- - test 0 -- -- -
disabled = False
p0 = 5
p1 = ("#####","#   #","# # #","#   #","#####")
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
#-- -- -- -- -- -- -- -- --

#-- -- - test 1 -- -- -
disabled = False
p0 = 9
p1 = ("#########","#       #","# ##### #","# #   # #","# # # # #","# #   # #","# ##### #","#       #","#########")
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
#-- -- -- -- -- -- -- -- --

#-- -- - test 2 -- -- -
disabled = False
p0 = 13
p1 = ("#############","#           #","# ######### #","# #       # #","# # ##### # #","# # #   # # #","# # # # # # #","# # #   # # #","# # ##### # #","# #       # #","# ######### #","#           #","#############")
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
#-- -- -- -- -- -- -- -- --

#-- -- - test 3 -- -- -
disabled = False
p0 = 17
p1 = ("#################","#               #","# ############# #","# #           # #","# # ######### # #","# # #       # # #","# # # ##### # # #","# # # #   # # # #","# # # # # # # # #","# # # #   # # # #","# # # ##### # # #","# # #       # # #","# # ######### # #","# #           # #","# ############# #","#               #","#################")
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
#-- -- -- -- -- -- -- -- --

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

#END KAWIGIEDIT TESTING
#Powered by KawigiEdit - pf 2.3.0 !
